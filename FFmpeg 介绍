一，格式转换：
ffmpeg -i file.avi output.flv。（将file.avi转换成output.flv）
- i ：表示输入文件

二，现在有个视频video.avi,有个音频audio.mp3，将其合拼成output.avi
要使用两个命令:（video2.avi是中间文件，用完可以删除）
ffmpeg -i video.avi -vcodec copy -an video2.avi
ffmpeg -i video2.avi  -i audio.mp3 -vcodec copy -acodec copy output.avi
- i：表示输入文件
-vcodec copy 表示 force video codec（‘copy’ to copy stream） 这个不知道怎么译，估计是直接copy
-acodec copy 这个说的是应该是音频了，跟上面一样。
-an：表示disable audio 估计是 audio no 之类的缩写，表示去掉video.avi 原有的音频

三，从视频里面直接提取声音
ffmpeg -i 人生若是如初见.flv -vn r.mp3    从flv文件中 提取声音并保存为mp3格式
-vn：表示忽略视频  估计是video  no 之类的缩写
ffmpeg  -i  人生若只如初见.flv  -an  r.flv 只留视频不留声音
-an：表示忽略声音  估计是audio  no之类的缩写


四，从视频里面提取图片
ffmpeg -i test.avi -y -f image2 -ss 8 -t 0.001 -s 350x240 test.jpg -ss  第8秒出截一图

五，压缩mp3文件
如果你觉得mp3文件有点大，想变小一点可以通过-db 选项改变音频的比特率
ffmpeg -i input.mp3 -ab 128 output.mp3    这里将比特率设为128

mp3中比特率的含义是：在压缩音频文件至mp3时，由压缩软件所确定数码文件在播放时每秒传送给播放器大小，其单位是：千位/秒;英文的含义是：kbps - = kilobits per second。现在mp3文件的最高数位率是320 kbps。这样的文件体积很大，每分钟的音乐超过两兆字节。如果采用可变比特率(VBR)编码来生成mp3文件，获得与320 kbps相当音质，文件的体积会缩小25~50%。请注意：播放时间相同，而歌曲不同，所获的压缩mp3文件的一般不相同，这是因为VBR编码所生成的mp3文件的大小不仅仅取决于播放时间的长度，还取决于源音频文件的其它因素。

六，录音（要有可用的麦克风，并且如果用alsa的话，好像得安alsa-oss,重启）
ffmpeg  -f x11 grab -s xga -r 10  -i :0.0+0+0 wheer.avi
ffmpeg -f  x11 gran -s 320x240   -r  10 -i :0.0+100+200 wheer.avi
:0.0表示屏幕（个人理解，因为系统变量￥DISPLAY值就是：0.0）而100像素，200表示距上端200
-s 设置窗口大小
-r 10 好像是设置频率，不懂
ffmpeg -f x11 grab -s xga -qscale 5 -r 10 -i :0.0+0+0  wheer.avi
-qscale 8 设定画面质量，值越小越好
录制屏幕时，同时录音
ffmpeg -f oss -i /dev/dsp -f x11 grab -r 30  -s 1024/768 -i :0.0 output.mkv
ffmpeg -ac 2 -f oss -i /dev/dsp/ -f  x11 grap -r 30 -s  1024x768 -i :0.0 -acodec pcm_s16le -vcodec libx264 -vpre lossless_ultrafast -threads 0 output.mkv

如果我屏幕上打开了一个窗口，我只想录这个窗口的内容，如何确定这个窗口的坐标位置呢
　　可以用另外一个命令
　　xwininfo 输入这个命令后，用鼠标点选目标窗口，
　　就会出现目标窗口的坐标，宽高等一系列信息
　　Absolute upper-left X: 276
　　Absolute upper-left Y: 57
　　Relative upper-left X: 2
　　Relative upper-left Y: 23
　　Width: 742
　　Height: 499
　　Depth: 24
　　Visual: 0x21
　　Visual Class: TrueColor
　　Border width: 0
　　Class: InputOutput
　　Colormap: 0x20 (installed)
　　Bit Gravity State: NorthWestGravity
　　Window Gravity State: NorthWestGravity
　　Backing Store State: NotUseful
　　Save Under State: no
　　Map State: IsViewable
　　Override Redirect State: no
　　Corners: +276+57 -262+57 -262-244 +276-244
　　-geometry 80x24+274+34 看到这一行了没 ()
　　比如根据上面的信息
ffmpeg -f oss -i /dev/dsp -f  x11 grab -r 30 -s  1280x752 -i :0.0+0+23 output.avi
这个-r 30 应该是每秒中取样几次，估计是一秒截30次屏，

切头去尾：
ffmpeg -ss 00:00:10 -t 00:01:22 -i 五月天-突然好想你.mp3 out put.mp3
只要从第10秒开始截取，共截取1:22时长的内容


====================================================================================================
下面是wiki 上给的几个例子
　　参数
　　FFmpeg可使用众多参数，参数内容会根据ffmpeg版本而有差异，使用前建议先参考参数及编解码器的叙述。此外，参数明细可用 ffmpeg -h 显示;编解码器名称等明细可用ffmpeg -formats 显示。
　　下列为较常使用的参数。
　　[编辑]主要参数
　　-i 设定输入档名。
　　-f 设定输出格式。
　　-y 若输出档案已存在时则覆盖档案。
　　-fs 超过指定的档案大小时则结束转换。
　　-ss 从指定时间开始转换。
　　-title 设定标题。
　　-timestamp 设定时间戳。
　　-vsync 增减Frame使影音同步。
　　[编辑]影像参数
　　-b 设定影像流量，默认为200Kbit/秒。( 单位请参照下方注意事项 )
　　-r 设定FrameRate值，默认为25。
　　-s 设定画面的宽与高。
　　-aspect 设定画面的比例。
　　-vn 不处理影像，于仅针对声音做处理时使用。
　　-vcodec 设定影像影像编解码器，未设定时则使用与输入档案相同之编解码器。
　　[编辑]声音参数
　　-ab 设定每Channel(最近的SVN版为所有Channel的总合)的流量。(单位请参照下方注意事项 )
　　-ar 设定采样率。
　　-ac 设定声音的Channel数。
　　-acodec 设定声音编解码器，未设定时与影像相同，使用与输入档案相同之编解码器。
　　-an 不处理声音，于仅针对影像做处理时使用。
　　-vol 设定音量大小，256为标准音量。(要设定成两倍音量时则输入512，依此类推。)
　　[编辑]注意事项
　　以-b及ab参数设定流量时，根据使用的ffmpeg版本，须注意单位会有kbits/sec与bits/sec的不同。(可用ffmpeg -h显示说明来确认单位。)
　　例如，单位为bits/sec的情况时，欲指定流量64kbps时需输入‘ -ab 64k ’;单位为kbits/sec的情况时则需输入‘ -ab 64 ’。
　　以-acodec及-vcodec所指定的编解码器名称，会根据使用的ffmpeg版本而有所不同。例如使用AAC编解码器时，会有输入aac与libfaac的情况。此外，编解码器有分为仅供解码时使用与仅供编码时使用，因此一定要利用ffmpeg -formats确认输入的编解码器是否能运作。
　　[编辑]范例
　　将MPEG-1影片转换成MPEG-4格式之范例
　　ffmpeg -i inputfile.mpg -f mp4 -acodec libfaac -vcodec mpeg4 -b 256k -ab 64k outputfile.mp4
　　将MP3声音转换成MPEG-4格式之范例
　　ffmpeg -i inputfile.mp3 -f mp4 -acodec libaac -vn -ab 64k outputfile.mp4
　　将DVD的VOB档转换成VideoCD格式的MPEG-1档之范例
　　ffmpeg -i inputfile.vob -f mpeg -acodec mp2 -vcodec mpeg1video -s 352x240 -b 1152k -ab 128k outputfile.mpg
　　将AVI影片转换成H.264格式的M4V档之范例
　　ffmpeg -i inputfile.avi -f mp4　-acodec libfaac -vcodec libx264 -b 512k -ab 320k outputfile.m4v
　　将任何影片转换成东芝REGZA可辨识的MPEG2格式之范例
　　ffmpeg -i inputfile -target ntsc-svcd -ab 128k -aspect 4:3 -s 720x480 outputfile.mpg
　　连接复数的AVI影片档之范例(在此范例中须一度暂时将AVI档转换成MPEG-1档(MPEG-1, MPEG-2 PS
　　DV格式亦可连接)、ffmpeg -i input1.avi -sameq inputfile_01.mpgffmpeg -i input2.avi -sameq inputfile_02.mpgcat inputfile_01.mpg inputfile_02.mpg > inputfile_all.mpgffmpeg -i inputfile_all.mpg -sameq outputfile.avi=============================================================================同时搞明白的一些问题在alsa 体系中声卡(也可能是麦克风，)叫hw:0,0 而在oss 体系中叫/dev/dsp (用词可能不太专业) Linux在安装了声卡后，会有一些设备文件生成。 采集数字样本的/dev/dsp文件，针对混音器的/dev/mixer文件，用于音序器的/dev/sequencer，/dev/audio文件一个 基于兼容性考虑的声音设备文件。只要向/dev/audio中输入wav文件就能发出声音。而对/dev/dsp文件读取就能得到WAV文件格式的声音文件。
